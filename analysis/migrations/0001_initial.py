# Generated by Django 2.2.3 on 2019-12-31 13:57

import analysis.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='sight code')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('username', models.CharField(help_text='Please enter within 30 characters.', max_length=30, verbose_name='user name')),
                ('thumbnail', models.ImageField(default='./thumbnail/noimage.png', upload_to='thumbnail', verbose_name='thumbnail')),
                ('self_intro', models.CharField(blank=True, help_text='Please enter within 1000 characters.', max_length=1000, null=True, verbose_name='introduction')),
                ('major_category', models.CharField(choices=[('00', '-'), ('11', '山岳'), ('12', '高原・湿原・原野'), ('13', '湖沼'), ('14', '河川・渓谷'), ('15', '滝'), ('16', '海岸・岬'), ('17', '岩石・洞窟'), ('18', '動物'), ('19', '植物'), ('21', '史跡'), ('22', '神社・寺院・教会'), ('23', '城跡・宮殿'), ('24', '集落・街'), ('25', '郷土景観'), ('26', '庭園・公園'), ('27', '建造物'), ('28', '年中行事（祭り・伝統行事）'), ('29', '動植物園・水族館'), ('30', '博物館・美術館'), ('31', 'テーマ公園・テーマ施設'), ('32', '温泉'), ('33', '食'), ('34', '芸能・イベント')], default='00', max_length=2, verbose_name='major category')),
                ('address', models.CharField(blank=True, help_text='Please enter within 150 characters.', max_length=150, null=True, verbose_name='address')),
                ('telephone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Tel number must be entered in the format: "09012345678". Up to 15 digits allowed.', regex='^[0-9]+$')], verbose_name='telephone number')),
                ('entrance_fee', models.CharField(blank=True, help_text='Please enter within 150 characters.', max_length=150, null=True, verbose_name='entrance fee')),
                ('business_hours', models.CharField(blank=True, help_text='Please enter within 100 characters.', max_length=100, null=True, verbose_name='business hours')),
                ('holiday', models.CharField(blank=True, help_text='Please enter within 30 characters.', max_length=30, null=True, verbose_name='holiday')),
                ('is_staff', models.BooleanField(default=False, help_text='管理サイトにログイン可能かどうか指定してください。', verbose_name='staff_status')),
                ('is_active', models.BooleanField(default='True', help_text='ユーザーがアクティブ状態か指定してください。', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Exhibit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exhibit_name', models.TextField(help_text='30文字以内で入力しください', max_length=30)),
                ('exhibit_desc', models.TextField(help_text='500文字以内で入力してください', max_length=500)),
                ('exhibit_name_en', models.TextField(blank=True, default='', help_text='30文字以内で入力しください', max_length=30, null=True)),
                ('exhibit_desc_en', models.TextField(blank=True, default='', help_text='500文字以内で入力してください', max_length=500, null=True)),
                ('exhibit_name_zh', models.TextField(blank=True, default='', help_text='30文字以内で入力しください', max_length=30, null=True)),
                ('exhibit_desc_zh', models.TextField(blank=True, default='', help_text='500文字以内で入力してください', max_length=500, null=True)),
                ('upload_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='exhibit_owner', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'exhibit',
                'ordering': ('-upload_date',),
            },
        ),
        migrations.CreateModel(
            name='UserLang',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(choices=[('na', ''), ('en', 'English'), ('zh', 'Chinese'), ('ko', 'Korea')], default='NA', max_length=5, verbose_name='language')),
                ('username', models.CharField(blank=True, help_text='Please enter within 30 characters.', max_length=30, null=True, verbose_name='user name')),
                ('self_intro', models.CharField(blank=True, help_text='Please enter within 1000 characters.', max_length=1000, null=True, verbose_name='introduction')),
                ('address', models.CharField(blank=True, help_text='Please enter within 150 characters.', max_length=150, null=True, verbose_name='address')),
                ('entrance_fee', models.CharField(blank=True, help_text='Please enter within 150 characters.', max_length=150, null=True, verbose_name='entrance fee')),
                ('business_hours', models.CharField(blank=True, help_text='Please enter within 100 characters.', max_length=100, null=True, verbose_name='business hours')),
                ('holiday', models.CharField(blank=True, help_text='Please enter within 30 characters.', max_length=30, null=True, verbose_name='holiday')),
                ('upload_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'userlang',
            },
        ),
        migrations.CreateModel(
            name='ExhibitPicture',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('post_pic', models.ImageField(blank=True, null=True, upload_to=analysis.models.get_photo_upload_path)),
                ('upload_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('exhibit_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='exhibit_pk', to='analysis.Exhibit')),
            ],
            options={
                'db_table': 'exhibit_picture',
                'ordering': ('-upload_date',),
            },
        ),
    ]
